services:

  app:
    hostname: app
    container_name: app
    build:
      dockerfile: Dockerfile.dev
    restart: always
    ports: 
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - fastapi_demo_net

  db:
    image: postgres:16.3
    hostname: postgres_db
    container_name: postgres_db
    restart: always
    user: ${POSTGRES_USER}
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-db:/var/lib/postgresql/data
    networks:
      - fastapi_demo_net
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:4.8.1
    hostname: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - fastapi_demo_net

volumes:
  postgres-db:

networks:
  fastapi_demo_net:
    name: fastapi_demo_net